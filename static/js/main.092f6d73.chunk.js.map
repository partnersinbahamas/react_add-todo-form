{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","prepearedTodos","todosFromServer","usersFromServer","find","App","useState","userSelectedId","setUserSelectId","setTitle","hasNoInput","setHasNoInput","setTodo","newId","Math","max","action","method","onSubmit","event","preventDefault","newUser","newTodo","addTodo","type","value","onChange","target","replace","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.092f6d73.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      key={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return <TodoInfo todo={todo} key={todo.id} />;\n      })}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst prepearedTodos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId) || null,\n}));\n\nexport const App: React.FC = () => {\n  const [userSelectedId, setUserSelectId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [hasNoInput, setHasNoInput] = useState(true);\n  const [todos, setTodo] = useState<Todo[]>(prepearedTodos);\n\n  const newId = Math.max(...todosFromServer.map((todo) => todo.id + 1));\n\n  const addTodo = () => {\n    const newUser = usersFromServer.find(user => user.id === userSelectedId);\n\n    if (newUser) {\n      const newTodo = {\n        id: newId,\n        title,\n        completed: false,\n        userId: newUser.id,\n        user: newUser,\n      };\n\n      setTodo([\n        ...todos,\n        newTodo,\n      ]);\n    }\n  };\n\n  const clearFields = () => {\n    setHasNoInput(true);\n    setTitle('');\n    setUserSelectId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title || !userSelectedId) {\n      setHasNoInput(false);\n\n      return;\n    }\n\n    addTodo();\n    clearFields();\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (value !== ' ') {\n      return setTitle(value.replace(/[^A-Za-z0-9\\s^А-яЁё]/i, ''));\n    }\n\n    return 0;\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    return setUserSelectId(+value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handleInputChange}\n              placeholder=\"Enter a title\"\n            />\n          </label>\n          {(!hasNoInput && !title)\n              && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              value={userSelectedId}\n              data-cy=\"userSelect\"\n              onChange={handleSelectChange}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n\n              {usersFromServer.map((user) => {\n                return (\n                  <option\n                    key={user.id}\n                    value={user.id}\n                  >\n                    {user.name}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n\n          {(!hasNoInput && !userSelectedId)\n              && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}